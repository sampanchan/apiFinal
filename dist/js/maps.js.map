{"version":3,"sources":["maps.js"],"names":["GoogleMapApi","evt","console","log","mapCenter","map","getCenter","responseInfo","center","responseEvent","CustomEvent","detail","document","dispatchEvent","preventDefault","placeName","querySelector","value","placeRequest","location","radius","query","fields","service","google","maps","places","PlacesService","textSearch","handlePlaceResults","results","status","PlacesServiceStatus","OK","clearMarkers","forEach","result","createMarker","lat","geometry","lng","title","name","i","length","business","position","address","formatted_address","number","formatted_phone_number","icon","image","photos","getUrl","rating","url","html_attributions","businessItemEl","createElement","setAttribute","listContainer","appendChild","nameEl","textContent","addressEl","imageEl","ratingEl","windowContent","markerInfo","marker","setMap","setupListener","addEventListener","handleMapCenterRequest","handleMarkers","handleMarker","options","Marker","infoWindowContent","infoWindow","InfoWindow","addListener","setContent","open","reviewEvent","businessId","push","theCircus","mapOptions","zoom","Map","getElementById","mapReadyEvent","window","gMap"],"mappings":"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","sourcesContent":["class GoogleMapApi{\n\n    \n    API_KEY = 'AIzaSyBN8YgsGRhmpj0vSQlLl5EViZa3MGbrjr8'\n    marker = []\n\n    // init(){\n    //     console.log('google map init')\n    //     // const form = document.querySelector('form[name=\"place_search\"]')\n    //     // form.addEventListener('submit', this.handlePlaceSearch)\n    // }\n\n    constructor(){\n        console.log('google map loaded')\n        this.setupListener()\n    }\n\n    setupListener() {\n        document.addEventListener('get-map-center', this.handleMapCenterRequest)\n        document.addEventListener('business-search', this.handleMarkers)\n        document.addEventListener('add-marker', this.handleMarker)\n\n        //clearing markers\n        document.addEventListener('clear-markers', this.clearMarkers)\n        \n\n    }\n\n\n    handleMapCenterRequest = (evt) => {\n        console.log(evt)\n        const mapCenter = this.map.getCenter()\n        console.log('please be center')\n        const responseInfo = { center: mapCenter}\n        console.log(responseInfo)\n        const responseEvent = new CustomEvent('get-map-center-response', {detail: responseInfo})\n        document.dispatchEvent(responseEvent)\n    }\n\n    handlePlaceSearch = (evt) => {\n        evt.preventDefault()\n        console.log('handle place search ok')\n        var placeName = document.querySelector('#place').value\n\n        var placeRequest = {\n            location: this.map.getCenter(),\n            radius: 50,\n            query: placeName,\n            fields: ['formatted_phone_number'],\n        }\n        this.service = new google.maps.places.PlacesService(this.map)\n        this.service.textSearch(placeRequest, this.handlePlaceResults)\n    }\n\n    handlePlaceResults = (results, status) => {\n        console.log('handle result search ok')\n      \n\n        if (status == google.maps.places.PlacesServiceStatus.OK){\n            console.log('got results', results)\n\n            this.clearMarkers()\n\n            results.forEach((result) => {\n                this.createMarker({\n                    lat: result.geometry.location.lat(),\n                    lng: result.geometry.location.lng(),\n                    title: result.name,\n                    \n\n                })\n\n\n            })\n\n\n            for ( let i = 0; i < results.length; i++){\n\n                const business = results[i];\n    \n                const lat  = business.geometry.location.lat();\n                const lng  = business.geometry.location.lng();\n                const position = { lat: lat, lng: lng};\n                const name = business.name;\n                const address = business.formatted_address;\n                const number = business.formatted_phone_number;\n                const icon = business.icon;\n                const image = business.photos[0].getUrl();\n                const rating = business.rating;\n                const url = business.photos[0].html_attributions;\n\n                // list item\n                const businessItemEl = document.createElement('div');\n                businessItemEl.setAttribute('class', 'business-item');\n                listContainer.appendChild(businessItemEl);\n                console.log('businessitemcreated')\n\n                // Name\n                const nameEl = document.createElement('h2');\n                businessItemEl.appendChild(nameEl);\n                nameEl.textContent = name;\n\n                // address\n                const addressEl = document.createElement('p');\n                listContainer.appendChild(addressEl);\n                addressEl.textContent = address;\n\n                //image works\n                const imageEl = document.createElement('img');\n                businessItemEl.appendChild(imageEl);\n                imageEl.setAttribute('src', image)\n\n                //rating\n                const ratingEl = document.createElement('p');\n                businessItemEl.appendChild(ratingEl);\n                ratingEl.textContent = rating + \"/5\"\n                this.createMarker({\n                    lat: business.geometry.location.lat(),\n                    lng: business.geometry.location.lng(),\n                    map: this.map,\n                    title: 'the circus',\n                    windowContent: `<div><img src=${business.icon} atl=\"\" width=\"20px\" height=\"20px\"></div>\n                    <div>\n                    <h3>${business.name}</h3>\n                    <p>${business.formatted_address}</p>\n                    \n                    <img src=${business.photos[0].getUrl()} atl=\" width=\"50px\" height=\"50px\">\n                    <p> rating: ${business.rating}/5</p>\n                    </div> `\n                })\n\n                // const marker = new google.maps.Marker({\n\n                //     position: position,\n                //     map: this.map,\n                //     title: 'the circus',\n                   \n                //     // label: 'the creative circus',\n                //     // draggable: true,\n                // });\n\n            \n                // const infoWindowContent = `<div><img src=${business.icon} atl=\"\" width=\"20px\" height=\"20px\"></div>\n                //                             <div>\n                //                             <h3>${business.name}</h3>\n                //                             <p>${business.formatted_address}</p>\n                                            \n                                            \n                //                             <img src=${business.photos[0].getUrl()} atl=\" width=\"50px\" height=\"50px\">\n                //                             <p> rating: ${business.rating}/5</p>\n                //                             </div> `\n                // const infoWindow = new google.maps.InfoWindow({\n                //  content: infoWindowContent,\n                // })\n                // marker.addListener('click', () => {\n                //     infoWindow.open(this.map, marker)\n                //    })\n                   \n\n            }\n\n\n        }\n    }\n    \n    handleMarker = (evt) =>{\n        const markerInfo = evt.detail\n        this.createMarker(markerInfo)\n    }\n\n    createMarker (options) {\n        \n        const marker = new google.maps.Marker({\n            position: {lat: options.lat, lng: options.lng},\n            map: this.map,\n            title: options.title,\n            icon: options.icon, \n        })\n\n\n        const infoWindowContent = options.windowContent\n        if (!this.infoWindow){\n            this.infoWindow = new google.maps.InfoWindow()\n        }\n                    // const infoWindow = new google.maps.InfoWindow({\n                    //  content: infoWindowContent,\n                    // })\n                    marker.addListener('click', () => {\n                        // infoWindow.open(this.map, marker)\n                        this.infoWindow.setContent(infoWindowContent)\n                        this.infoWindow.open(this.map, marker)\n\n                        const reviewEvent = new CustomEvent('review-search', { detail: options.businessId })\n\n                        document.dispatchEvent(reviewEvent) \n                     })\n\n                     this.marker.push(marker)\n                    \n    } \n\n    clearMarkers = () => {\n        this.marker.forEach(marker => {\n            marker.setMap(null)\n        })\n\n        this.marker = []\n    }\n    \n\n    ready(){\n\n        console.log('map is ready')\n\n        const theCircus = { lat: 33.81328, lng: -84.36175 } \n        const mapOptions = {\n            center: theCircus,\n            zoom:15,\n        }\n\n        this.map = new google.maps.Map(document.getElementById('map'), mapOptions)\n\n        const image = \"/dist/img/tent.png\"\n        this.createMarker({\n            lat: theCircus.lat,\n            lng: theCircus.lng,\n            title: ' The circus',\n            icon: image,\n            windowContent:`<div><h2>Join the Circus!!</h2><p> A place where you leave your worries behind and make new stress factors</p></div>`\n        })\n\n        const mapReadyEvent = new CustomEvent('map-ready')\n        document.dispatchEvent(mapReadyEvent)    \n    }\n    handleMarkers = (evt) => {\n        console.log(evt.detail)\n    }\n}       \n    \n        \n\n       \n\n        \n    \n    \n\nwindow.gMap = new GoogleMapApi();\n// window.gMap.init();"],"file":"maps.js"}